data = tweets_map,
colour = '#CC0000', alpha = .6) +
scale_size(range = c(1,8),
breaks = c(100, 500, 1000, 3000, 6000)) +
labs(size = 'Followers',
title = 'Time: {closest_state}') +
dark_theme_gray() +
theme(
legend.background = element_blank(),
legend.position = c(0.05, 0.23),
legend.key = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank()
) +
transition_states(created_at, 1, 1, wrap = T) +
shadow_mark()
animate(map,width = 700, height = 450, end_pause = 30, fps=3)
library(ggdark)
tweets_map<- tweets_map %>%
select(created_at, followers_count, long, lat) %>%
na.omit()
tweets_map$created_at <-format(tweets_map$created_at, tz="America/Los_Angeles",usetz=TRUE)
tweets_map$created_at
tweets_map
tweets_map$created_at <- as.POSIXct(tweets_map$created_at)
tweets_map$created_at
tweets_map
world <- ggplot() +
borders("world", colour = "gray35", fill = "gray80") +
theme_map()
map <- world +
geom_point(aes(x = long, y = lat, size = followers_count),
data = tweets_map,
colour = '#CC0000', alpha = .5) +
scale_size(range = c(1,8),
breaks = c(100, 500, 1000, 3000, 6000)) +
labs(size = 'Followers') +
dark_theme_gray() +
theme(
legend.background = element_blank(),
legend.position = c(0.05, 0.23),
legend.key = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank()
)
map
library(gganimate)
map <- world +
geom_point(aes(x = long,
y = lat,
size = followers_count),
data = tweets_map,
colour = '#CC0000', alpha = .6) +
scale_size(range = c(1,8),
breaks = c(100, 500, 1000, 3000, 6000)) +
labs(size = 'Followers',
title = 'Time: {closest_state}') +
dark_theme_gray() +
theme(
legend.background = element_blank(),
legend.position = c(0.05, 0.23),
legend.key = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank()
) +
transition_states(created_at, 0, 1, wrap = F) +
shadow_mark()
animate(map,width = 700, height = 450, end_pause = 10, fps=5)
library(gganimate)
map <- world +
geom_point(aes(x = long,
y = lat,
size = followers_count),
data = tweets_map,
colour = '#CC0000', alpha = .6) +
scale_size(range = c(1,8),
breaks = c(100, 500, 1000, 3000, 6000)) +
labs(size = 'Followers',
title = 'Time: {closest_state} PDT') +
dark_theme_gray() +
theme(
legend.background = element_blank(),
legend.position = c(0.05, 0.23),
legend.key = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank()
) +
transition_states(created_at, 0, 1, wrap = F) +
shadow_mark()
animate(map,width = 700, height = 450, end_pause = 10, fps=5)
library(dplyr)
library(tm)
library(rtweet)
library(httpuv)
library(slam)
library(stringr)       # Removing characters
library(qdapRegex)     # Removing URLs
library(shiny)
library(DT)
library(shinythemes)
library(wordcloud2)
library(rjson)
library(jsonlite)
library(leaflet)
library(lubridate)
library(maps)
library(ggthemes)
consumer_key <- '3HtfVZ3HIv3oGRkbOwREJ4d5Y'
consumer_secret <- 'llNEksiO3S1aCzZAtBxeXnTBi2yegpQ92gLmw9zJWAqpog7FPo'
Access_token <-'739303876055072768-JMXifS6L1nMUWVDaf7N1sdsROVmlcf5'
Access_tokensecret <- 'CkF4TqAkXrZS71zrikSKTHCxs6Aph73n67zneFwf5JsYI'
#Create a token to connect to Twitter's API using your key and secret
token <- create_token(app="RyanDV", consumer_key, consumer_secret,
Access_token, Access_tokensecret,set_renv = TRUE)
tweets_map <- search_tweets("#coronavirus",
5000,
include_rts = FALSE)
tweets_map<- lat_lng(tweets_map)
tweets_map
tweets_map <- tweets_map %>% rename(long = lng)
library(ggdark)
tweets_map<- tweets_map %>%
select(created_at, followers_count, long, lat) %>%
na.omit()
tweets_map$created_at <-format(tweets_map$created_at, tz="America/Los_Angeles",usetz=TRUE)
tweets_map$created_at
tweets_map
tweets_map$created_at <- as.POSIXct(tweets_map$created_at)
tweets_map$created_at
tweets_map
world <- ggplot() +
borders("world", colour = "gray35", fill = "gray80") +
theme_map()
map <- world +
geom_point(aes(x = long, y = lat, size = followers_count),
data = tweets_map,
colour = '#CC0000', alpha = .5) +
scale_size(range = c(1,8),
breaks = c(100, 500, 1000, 3000, 6000)) +
labs(size = 'Followers') +
dark_theme_gray() +
theme(
legend.background = element_blank(),
legend.position = c(0.05, 0.23),
legend.key = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank()
)
map
library(gganimate)
map <- world +
geom_point(aes(x = long,
y = lat,
size = followers_count),
data = tweets_map,
colour = '#CC0000', alpha = .6) +
scale_size(range = c(1,8),
breaks = c(100, 500, 1000, 3000, 6000)) +
labs(size = 'Followers',
title = 'Time: {closest_state} PDT') +
dark_theme_gray() +
theme(
legend.background = element_blank(),
legend.position = c(0.05, 0.23),
legend.key = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank()
) +
transition_states(created_at, 0, 1, wrap = F) +
shadow_mark()
animate(map,width = 700, height = 450, end_pause = 10, fps=5)
library(gganimate)
map <- world +
geom_point(aes(x = long,
y = lat,
size = followers_count),
data = tweets_map,
colour = '#CC0000', alpha = .6) +
scale_size(range = c(1,8),
breaks = c(100, 500, 1000, 3000, 6000)) +
labs(size = 'Followers',
title = 'Time: {closest_state} PDT') +
dark_theme_gray() +
theme(
legend.background = element_blank(),
legend.position = c(0.05, 0.23),
legend.key = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank()
) +
transition_states(created_at, 0, 1, wrap = F) +
shadow_mark()
animate(map,width = 700, height = 450, end_pause = 10, fps=5)
library(dplyr)
library(tm)
library(rtweet)
library(httpuv)
library(slam)
library(stringr)       # Removing characters
library(qdapRegex)     # Removing URLs
library(shiny)
library(DT)
library(shinythemes)
library(wordcloud2)
library(rjson)
library(jsonlite)
library(leaflet)
library(lubridate)
library(maps)
library(ggthemes)
consumer_key <- '3HtfVZ3HIv3oGRkbOwREJ4d5Y'
consumer_secret <- 'llNEksiO3S1aCzZAtBxeXnTBi2yegpQ92gLmw9zJWAqpog7FPo'
Access_token <-'739303876055072768-JMXifS6L1nMUWVDaf7N1sdsROVmlcf5'
Access_tokensecret <- 'CkF4TqAkXrZS71zrikSKTHCxs6Aph73n67zneFwf5JsYI'
#Create a token to connect to Twitter's API using your key and secret
token <- create_token(app="RyanDV", consumer_key, consumer_secret,
Access_token, Access_tokensecret,set_renv = TRUE)
tweets_map <- search_tweets("#coronavirus",
5000,
include_rts = FALSE)
tweets_map<- lat_lng(tweets_map)
tweets_map
tweets_map <- tweets_map %>% rename(long = lng)
library(ggdark)
tweets_map<- tweets_map %>%
select(created_at, followers_count, long, lat) %>%
na.omit()
tweets_map$created_at <-format(tweets_map$created_at, tz="America/Los_Angeles",usetz=TRUE)
tweets_map$created_at
tweets_map
tweets_map$created_at <- as.POSIXct(tweets_map$created_at)
tweets_map$created_at
tweets_map
world <- ggplot() +
borders("world", colour = "gray35", fill = "gray80") +
theme_map()
map <- world +
geom_point(aes(x = long, y = lat, size = followers_count),
data = tweets_map,
colour = '#CC0000', alpha = .5) +
scale_size(range = c(1,8),
breaks = c(100, 500, 1000, 3000, 6000)) +
labs(size = 'Followers') +
dark_theme_gray() +
theme(
legend.background = element_blank(),
legend.position = c(0.05, 0.23),
legend.key = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank()
)
map
library(gganimate)
map <- world +
geom_point(aes(x = long,
y = lat,
size = followers_count),
data = tweets_map,
colour = '#CC0000', alpha = .6) +
scale_size(range = c(1,8),
breaks = c(100, 500, 1000, 3000, 6000)) +
labs(size = 'Followers',
title = 'Time: {closest_state} PDT') +
dark_theme_gray() +
theme(
legend.background = element_blank(),
legend.position = c(0.05, 0.23),
legend.key = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank()
) +
transition_states(created_at, 0, 1, wrap = F) +
shadow_mark()
animate(map,width = 700, height = 450, end_pause = 10, fps=5)
shiny::runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp()
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
View(TweetClean)
shiny::runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
shiny::runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp()
runApp('Documents/GitHub/Rshiny-twitter')
runApp()
runApp()
runApp('Documents/GitHub/Rshiny-twitter')
runApp()
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
library(readxl)
library(tidyverse)
library(ggdark)
data <- read_excel("./label_data.xlsx")
data$NPI <- as.factor(data$NPI)
head(data)
summary(data$NPI)
ggplot(data, aes(x = NPI,
fill = Sentiment)) +
geom_bar(alpha = 0.6) +
geom_text(aes(label=..count..),
stat='count',
position = position_stack(vjust = 0.5),
size = 3) +
labs(x = "Non-pharmaceutical Interventions",
y = "Count",
title = "The Number of Different Sentiment for Each Non-pharmaceutical Interventions") +
dark_theme_gray() +
guides(alpha = FALSE) +
theme(axis.text.x = element_text(size=6,
angle = 45,
hjust = 1),
legend.background = element_blank(),
legend.key = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
library(readxl)
library(tidyverse)
library(ggdark)
data <- read_excel("./label_data.xlsx")
data$NPI <- as.factor(data$NPI)
head(data)
summary(data$NPI)
ggplot(data, aes(x = NPI,
fill = Sentiment)) +
geom_bar(alpha = 0.6) +
geom_text(aes(label=..count..),
stat='count',
position = position_stack(vjust = 0.5),
size = 3) +
labs(x = "Non-pharmaceutical Interventions",
y = "Count",
title = "The Number of Different Sentiment for Each Non-pharmaceutical Interventions") +
dark_theme_gray() +
guides(alpha = FALSE) +
theme(axis.text.x = element_text(size=6,
angle = 45,
hjust = 1),
legend.background = element_blank(),
legend.key = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
data %>%
group_by(Id) %>%
summarise(num = n()) %>%
ggplot(aes(x = num,
alpha = 0.8)) +
geom_bar(fill = 'steelblue') +
geom_text(aes(label=..count..),
stat='count',
vjust = -0.5,
size = 3) +
labs(x = "Number of NPIs",
y = "Number of Occurrences",
title = "Number of NPIs per Sentence") +
dark_theme_gray() +
guides(alpha = FALSE) +
theme(axis.text.x = element_text(size=9),
legend.background = element_blank(),
legend.key = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
data.frame(c(1,2,3))
data.frame(c(1,2,3))
data.frame(num = c(1,2,3))
slices <- data.frame(name = c("Positive", "Neutral","Negative"),num = c(12,24,26))
slices
slices <- slices %>%
mutate(percentage = round(num/sum(num),4)*100,
lab.pos = cumsum(percentage)-.5*percentage)
ggplot(data = slices,
aes(x = 2, y = num, fill = name))+
geom_bar(stat = "identity")+
coord_polar("y", start = 200) +
geom_text(aes(y = lab.pos, label = num), col = "white") +
theme_void() +
scale_fill_brewer(palette = "Dark2")+
xlim(.2,2.5)
slices <- data.frame(name = c("Positive", "Neutral","Negative"),num = c(12,24,26))
slices
slices <- slices %>%
mutate(percentage = round(num/sum(num),4)*100,
lab.pos = cumsum(percentage)-.5*percentage)
ggplot(data = slices,
aes(x = 2, y = num, fill = name))+
geom_bar(stat = "identity")+
coord_polar("y", start = 200) +
geom_text(aes(y = lab.pos, label = paste(percentage,"%", sep = "")), col = "white") +
theme_void() +
scale_fill_brewer(palette = "Dark2")+
xlim(.2,2.5)
slices <- data.frame(name = c("Positive", "Neutral","Negative"),num = c(12,24,26))
slices
slices <- slices %>%
mutate(percentage = round(num/sum(num),4)*100,
lab.pos = cumsum(percentage)-.5*percentage)
ggplot(data = slices,
aes(x = 2, y = percentage, fill = name))+
geom_bar(stat = "identity")+
coord_polar("y", start = 200) +
geom_text(aes(y = lab.pos, label = paste(percentage,"%", sep = "")), col = "white") +
theme_void() +
scale_fill_brewer(palette = "Dark2")+
xlim(.2,2.5)
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
install.packages("shinyWidgets")
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
