library(jsonlite)
library(leaflet)
library(lubridate)
library(maps)
library(ggthemes)
consumer_key <- '3HtfVZ3HIv3oGRkbOwREJ4d5Y'
consumer_secret <- 'llNEksiO3S1aCzZAtBxeXnTBi2yegpQ92gLmw9zJWAqpog7FPo'
Access_token <-'739303876055072768-JMXifS6L1nMUWVDaf7N1sdsROVmlcf5'
Access_tokensecret <- 'CkF4TqAkXrZS71zrikSKTHCxs6Aph73n67zneFwf5JsYI'
#Create a token to connect to Twitter's API using your key and secret
token <- create_token(app="RyanDV", consumer_key, consumer_secret,
Access_token, Access_tokensecret,set_renv = TRUE)
tweets_map <- search_tweets("#china",
1000,
include_rts = FALSE)
library(gganimate)
map <- world +
geom_point(aes(x = long,
y = lat,
size = followers_count),
data = tweets_map,
colour = '#CC0000', alpha = .6) +
scale_size(range = c(1,8),
breaks = c(100, 500, 1000, 3000, 6000)) +
labs(size = 'Followers',
title = 'Time: {closest_state}') +
dark_theme_gray() +
theme(
legend.background = element_blank(),
legend.position = c(0.05, 0.23),
legend.key = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank()
) +
transition_states(created_at, 1, 1, wrap = T) +
shadow_mark()
animate(map,width = 700, height = 450, end_pause = 30, fps=3)
library(ggdark)
tweets_map<- tweets_map %>%
select(created_at, followers_count, long, lat) %>%
na.omit()
tweets_map$created_at <-format(tweets_map$created_at, tz="America/Los_Angeles",usetz=TRUE)
tweets_map$created_at
tweets_map
tweets_map$created_at <- as.POSIXct(tweets_map$created_at)
tweets_map$created_at
tweets_map
world <- ggplot() +
borders("world", colour = "gray35", fill = "gray80") +
theme_map()
map <- world +
geom_point(aes(x = long, y = lat, size = followers_count),
data = tweets_map,
colour = '#CC0000', alpha = .5) +
scale_size(range = c(1,8),
breaks = c(100, 500, 1000, 3000, 6000)) +
labs(size = 'Followers') +
dark_theme_gray() +
theme(
legend.background = element_blank(),
legend.position = c(0.05, 0.23),
legend.key = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank()
)
map
library(gganimate)
map <- world +
geom_point(aes(x = long,
y = lat,
size = followers_count),
data = tweets_map,
colour = '#CC0000', alpha = .6) +
scale_size(range = c(1,8),
breaks = c(100, 500, 1000, 3000, 6000)) +
labs(size = 'Followers',
title = 'Time: {closest_state}') +
dark_theme_gray() +
theme(
legend.background = element_blank(),
legend.position = c(0.05, 0.23),
legend.key = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank()
) +
transition_states(created_at, 0, 1, wrap = F) +
shadow_mark()
animate(map,width = 700, height = 450, end_pause = 10, fps=5)
library(gganimate)
map <- world +
geom_point(aes(x = long,
y = lat,
size = followers_count),
data = tweets_map,
colour = '#CC0000', alpha = .6) +
scale_size(range = c(1,8),
breaks = c(100, 500, 1000, 3000, 6000)) +
labs(size = 'Followers',
title = 'Time: {closest_state} PDT') +
dark_theme_gray() +
theme(
legend.background = element_blank(),
legend.position = c(0.05, 0.23),
legend.key = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank()
) +
transition_states(created_at, 0, 1, wrap = F) +
shadow_mark()
animate(map,width = 700, height = 450, end_pause = 10, fps=5)
library(dplyr)
library(tm)
library(rtweet)
library(httpuv)
library(slam)
library(stringr)       # Removing characters
library(qdapRegex)     # Removing URLs
library(shiny)
library(DT)
library(shinythemes)
library(wordcloud2)
library(rjson)
library(jsonlite)
library(leaflet)
library(lubridate)
library(maps)
library(ggthemes)
consumer_key <- '3HtfVZ3HIv3oGRkbOwREJ4d5Y'
consumer_secret <- 'llNEksiO3S1aCzZAtBxeXnTBi2yegpQ92gLmw9zJWAqpog7FPo'
Access_token <-'739303876055072768-JMXifS6L1nMUWVDaf7N1sdsROVmlcf5'
Access_tokensecret <- 'CkF4TqAkXrZS71zrikSKTHCxs6Aph73n67zneFwf5JsYI'
#Create a token to connect to Twitter's API using your key and secret
token <- create_token(app="RyanDV", consumer_key, consumer_secret,
Access_token, Access_tokensecret,set_renv = TRUE)
tweets_map <- search_tweets("#coronavirus",
5000,
include_rts = FALSE)
tweets_map<- lat_lng(tweets_map)
tweets_map
tweets_map <- tweets_map %>% rename(long = lng)
library(ggdark)
tweets_map<- tweets_map %>%
select(created_at, followers_count, long, lat) %>%
na.omit()
tweets_map$created_at <-format(tweets_map$created_at, tz="America/Los_Angeles",usetz=TRUE)
tweets_map$created_at
tweets_map
tweets_map$created_at <- as.POSIXct(tweets_map$created_at)
tweets_map$created_at
tweets_map
world <- ggplot() +
borders("world", colour = "gray35", fill = "gray80") +
theme_map()
map <- world +
geom_point(aes(x = long, y = lat, size = followers_count),
data = tweets_map,
colour = '#CC0000', alpha = .5) +
scale_size(range = c(1,8),
breaks = c(100, 500, 1000, 3000, 6000)) +
labs(size = 'Followers') +
dark_theme_gray() +
theme(
legend.background = element_blank(),
legend.position = c(0.05, 0.23),
legend.key = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank()
)
map
library(gganimate)
map <- world +
geom_point(aes(x = long,
y = lat,
size = followers_count),
data = tweets_map,
colour = '#CC0000', alpha = .6) +
scale_size(range = c(1,8),
breaks = c(100, 500, 1000, 3000, 6000)) +
labs(size = 'Followers',
title = 'Time: {closest_state} PDT') +
dark_theme_gray() +
theme(
legend.background = element_blank(),
legend.position = c(0.05, 0.23),
legend.key = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank()
) +
transition_states(created_at, 0, 1, wrap = F) +
shadow_mark()
animate(map,width = 700, height = 450, end_pause = 10, fps=5)
library(gganimate)
map <- world +
geom_point(aes(x = long,
y = lat,
size = followers_count),
data = tweets_map,
colour = '#CC0000', alpha = .6) +
scale_size(range = c(1,8),
breaks = c(100, 500, 1000, 3000, 6000)) +
labs(size = 'Followers',
title = 'Time: {closest_state} PDT') +
dark_theme_gray() +
theme(
legend.background = element_blank(),
legend.position = c(0.05, 0.23),
legend.key = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank()
) +
transition_states(created_at, 0, 1, wrap = F) +
shadow_mark()
animate(map,width = 700, height = 450, end_pause = 10, fps=5)
library(dplyr)
library(tm)
library(rtweet)
library(httpuv)
library(slam)
library(stringr)       # Removing characters
library(qdapRegex)     # Removing URLs
library(shiny)
library(DT)
library(shinythemes)
library(wordcloud2)
library(rjson)
library(jsonlite)
library(leaflet)
library(lubridate)
library(maps)
library(ggthemes)
consumer_key <- '3HtfVZ3HIv3oGRkbOwREJ4d5Y'
consumer_secret <- 'llNEksiO3S1aCzZAtBxeXnTBi2yegpQ92gLmw9zJWAqpog7FPo'
Access_token <-'739303876055072768-JMXifS6L1nMUWVDaf7N1sdsROVmlcf5'
Access_tokensecret <- 'CkF4TqAkXrZS71zrikSKTHCxs6Aph73n67zneFwf5JsYI'
#Create a token to connect to Twitter's API using your key and secret
token <- create_token(app="RyanDV", consumer_key, consumer_secret,
Access_token, Access_tokensecret,set_renv = TRUE)
tweets_map <- search_tweets("#coronavirus",
5000,
include_rts = FALSE)
tweets_map<- lat_lng(tweets_map)
tweets_map
tweets_map <- tweets_map %>% rename(long = lng)
library(ggdark)
tweets_map<- tweets_map %>%
select(created_at, followers_count, long, lat) %>%
na.omit()
tweets_map$created_at <-format(tweets_map$created_at, tz="America/Los_Angeles",usetz=TRUE)
tweets_map$created_at
tweets_map
tweets_map$created_at <- as.POSIXct(tweets_map$created_at)
tweets_map$created_at
tweets_map
world <- ggplot() +
borders("world", colour = "gray35", fill = "gray80") +
theme_map()
map <- world +
geom_point(aes(x = long, y = lat, size = followers_count),
data = tweets_map,
colour = '#CC0000', alpha = .5) +
scale_size(range = c(1,8),
breaks = c(100, 500, 1000, 3000, 6000)) +
labs(size = 'Followers') +
dark_theme_gray() +
theme(
legend.background = element_blank(),
legend.position = c(0.05, 0.23),
legend.key = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank()
)
map
library(gganimate)
map <- world +
geom_point(aes(x = long,
y = lat,
size = followers_count),
data = tweets_map,
colour = '#CC0000', alpha = .6) +
scale_size(range = c(1,8),
breaks = c(100, 500, 1000, 3000, 6000)) +
labs(size = 'Followers',
title = 'Time: {closest_state} PDT') +
dark_theme_gray() +
theme(
legend.background = element_blank(),
legend.position = c(0.05, 0.23),
legend.key = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank()
) +
transition_states(created_at, 0, 1, wrap = F) +
shadow_mark()
animate(map,width = 700, height = 450, end_pause = 10, fps=5)
library(dplyr)
library(tm)
library(rtweet)
library(httpuv)
library(slam)
library(stringr)       # Removing characters
library(qdapRegex)     # Removing URLs
library(shiny)
library(DT)
library(shinythemes)
library(wordcloud2)
library(rjson)
library(jsonlite)
library(leaflet)
library(lubridate)
library(maps)
library(ggthemes)
consumer_key <- '3HtfVZ3HIv3oGRkbOwREJ4d5Y'
consumer_secret <- 'llNEksiO3S1aCzZAtBxeXnTBi2yegpQ92gLmw9zJWAqpog7FPo'
Access_token <-'739303876055072768-JMXifS6L1nMUWVDaf7N1sdsROVmlcf5'
Access_tokensecret <- 'CkF4TqAkXrZS71zrikSKTHCxs6Aph73n67zneFwf5JsYI'
#Create a token to connect to Twitter's API using your key and secret
token <- create_token(app="RyanDV", consumer_key, consumer_secret,
Access_token, Access_tokensecret,set_renv = TRUE)
tweets_map <- search_tweets("#coronavirus",
5000,
include_rts = FALSE)
install.packages("gganimate")
tweets_map<- lat_lng(tweets_map)
tweets_map
tweets_map <- tweets_map %>% rename(long = lng)
library(ggdark)
tweets_map<- tweets_map %>%
select(created_at, followers_count, long, lat) %>%
na.omit()
tweets_map$created_at <-format(tweets_map$created_at, tz="America/Los_Angeles",usetz=TRUE)
tweets_map$created_at
tweets_map
tweets_map$created_at <- as.POSIXct(tweets_map$created_at)
tweets_map$created_at
tweets_map
world <- ggplot() +
borders("world", colour = "gray35", fill = "gray80") +
theme_map()
library(dplyr)
library(tm)
library(rtweet)
library(httpuv)
library(slam)
library(stringr)       # Removing characters
library(qdapRegex)     # Removing URLs
library(shiny)
library(DT)
library(shinythemes)
library(wordcloud2)
library(rjson)
library(jsonlite)
library(leaflet)
library(lubridate)
library(maps)
library(ggthemes)
library(gganimate)
consumer_key <- '3HtfVZ3HIv3oGRkbOwREJ4d5Y'
consumer_secret <- 'llNEksiO3S1aCzZAtBxeXnTBi2yegpQ92gLmw9zJWAqpog7FPo'
Access_token <-'739303876055072768-JMXifS6L1nMUWVDaf7N1sdsROVmlcf5'
Access_tokensecret <- 'CkF4TqAkXrZS71zrikSKTHCxs6Aph73n67zneFwf5JsYI'
#Create a token to connect to Twitter's API using your key and secret
token <- create_token(app="RyanDV", consumer_key, consumer_secret,
Access_token, Access_tokensecret,set_renv = TRUE)
tweets_map <- search_tweets("#coronavirus",
5000,
include_rts = FALSE)
tweets_map<- lat_lng(tweets_map)
tweets_map
tweets_map <- tweets_map %>% rename(long = lng)
library(ggdark)
tweets_map<- tweets_map %>%
select(created_at, followers_count, long, lat) %>%
na.omit()
tweets_map$created_at <-format(tweets_map$created_at, tz="America/Los_Angeles",usetz=TRUE)
tweets_map$created_at
tweets_map
tweets_map$created_at <- as.POSIXct(tweets_map$created_at)
tweets_map$created_at
tweets_map
world <- ggplot() +
borders("world", colour = "gray35", fill = "gray80") +
theme_map()
map <- world +
geom_point(aes(x = long, y = lat, size = followers_count),
data = tweets_map,
colour = '#CC0000', alpha = .5) +
scale_size(range = c(1,8),
breaks = c(100, 500, 1000, 3000, 6000)) +
labs(size = 'Followers') +
dark_theme_gray() +
theme(
legend.background = element_blank(),
legend.position = c(0.05, 0.23),
legend.key = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank()
)
map
library(gganimate)
map <- world +
geom_point(aes(x = long,
y = lat,
size = followers_count),
data = tweets_map,
colour = '#CC0000', alpha = .6) +
scale_size(range = c(1,8),
breaks = c(100, 500, 1000, 3000, 6000)) +
labs(size = 'Followers',
title = 'Time: {closest_state} PDT') +
dark_theme_gray() +
theme(
legend.background = element_blank(),
legend.position = c(0.05, 0.23),
legend.key = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank()
) +
transition_states(created_at, 0, 1, wrap = F) +
shadow_mark()
animate(map,width = 700, height = 450, end_pause = 10, fps=5)
library(gganimate)
map <- world +
geom_point(aes(x = long,
y = lat,
size = followers_count),
data = tweets_map,
colour = '#CC0000', alpha = .6) +
scale_size(range = c(1,8),
breaks = c(100, 500, 1000, 3000, 6000)) +
labs(size = 'Followers',
title = 'Time: {frame_time}') +
dark_theme_gray() +
theme(
legend.background = element_blank(),
legend.position = c(0.05, 0.23),
legend.key = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank()
) +
transition_time(created_at) +
shadow_mark()
animate(map,width = 700, height = 450, end_pause = 10, fps=5)
install.packages("gganimate")
install.packages("gganimate")
install.packages("gganimate")
install.packages("gganimate")
install.packages("gganimate")
install.packages("gganimate")
shiny::runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
runApp('Documents/GitHub/Rshiny-twitter')
